/* eslint-disable @typescript-eslint/no-var-requires */
const fs = require('node:fs');
const path = require('node:path');

const root = path.join(__dirname, '..');
const artifactsDir = path.join(root, 'artifacts', 'src');
const outDir = path.join(root, '..', 'frontend', 'lib', 'contracts');

function ensureDir(p) {
  fs.mkdirSync(p, { recursive: true });
}

function readAbi(contractName) {
  const artifactPath = path.join(artifactsDir, `${contractName}.sol`, `${contractName}.json`);
  if (!fs.existsSync(artifactPath)) {
    throw new Error(`Artifact not found for ${contractName} at ${artifactPath}. Did you run compile?`);
  }
  const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf-8'));
  return artifact.abi;
}

function main() {
  ensureDir(outDir);
  const abis = {
    TripEscrow: readAbi('TripEscrow'),
    ReputationSBT: readAbi('ReputationSBT'),
    TripNFT: readAbi('TripNFT'),
  };

  // Write individual ABI files
  for (const [name, abi] of Object.entries(abis)) {
    fs.writeFileSync(path.join(outDir, `${name}.abi.json`), JSON.stringify(abi, null, 2));
  }

  // Aggregate index file
  const indexTs = `// Auto-generated by contracts/scripts/export-abis.cjs\n` +
`// Do not edit manually.\n` +
`export { default as TripEscrowAbi } from './TripEscrow.abi.json';\n` +
`export { default as ReputationSBTAbi } from './ReputationSBT.abi.json';\n` +
`export { default as TripNFTAbi } from './TripNFT.abi.json';\n`;

  fs.writeFileSync(path.join(outDir, 'index.ts'), indexTs);

  // Addresses helper: read deployments and create a map
  const deploymentsDir = path.join(root, 'deployments');
  const addresses = {};
  if (fs.existsSync(deploymentsDir)) {
    for (const file of fs.readdirSync(deploymentsDir)) {
      if (file.endsWith('.json')) {
        const entry = JSON.parse(fs.readFileSync(path.join(deploymentsDir, file), 'utf-8'));
        addresses[entry.network] = entry.contracts;
      }
    }
  }
  const addressesTs = `// Auto-generated deployment addresses\n` +
`export const addresses = ${JSON.stringify(addresses, null, 2)} as const;\n`;
  fs.writeFileSync(path.join(outDir, 'addresses.ts'), addressesTs);

  console.log('âœ… ABIs and addresses exported to frontend/lib/contracts');
}

main();
