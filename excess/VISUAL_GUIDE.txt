╔══════════════════════════════════════════════════════════════════════════╗
║          🎯 WANDERLINK - VISUAL STEP-BY-STEP GUIDE                       ║
║                                                                          ║
║  Follow these 3 steps to complete your automated travel group system    ║
╚══════════════════════════════════════════════════════════════════════════╝


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 1: CREATE DATABASE TABLES IN SUPABASE                            ┃
┃ ⏱️  Time: 2 minutes                                                    ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1️⃣  Open Supabase SQL Editor:
   
    🌐 https://supabase.com/dashboard/project/xbspnzviiefekzosukfa/sql/new
    
    (Login with your credentials)

2️⃣  Open project file:
    
    📂 D:\WanderLink\SUPABASE_SCHEMA.sql
    
    (Use VS Code or any text editor)

3️⃣  Copy entire file:
    
    📋 Ctrl+A (Select All) → Ctrl+C (Copy)
    
    (All 350+ lines of SQL)

4️⃣  Paste into Supabase:
    
    ✍️  Click in SQL Editor → Ctrl+V (Paste)
    
    (Should see CREATE TABLE statements)

5️⃣  Run the SQL:
    
    ▶️  Click "RUN" button (or press Ctrl+Enter)
    
    (Wait 2-3 seconds for execution)

6️⃣  Verify success:
    
    ✅ Should see "Success. No rows returned"
    
    🧪 Test query:
       SELECT * FROM groups;
       
    ✅ Should return empty result (not error!)

┌──────────────────────────────────────────────────────────────────────┐
│ What this creates:                                                   │
│   • groups table (stores group info)                                 │
│   • group_members table (stores who's in each group)                 │
│   • group_messages table (stores chat messages)                      │
│   • user_trip_preferences table (stores user submissions)            │
│   • Indexes for fast queries                                         │
│   • Row Level Security policies                                      │
│   • Realtime subscriptions                                           │
└──────────────────────────────────────────────────────────────────────┘


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 2: SETUP NGROK TUNNEL (PUBLIC ACCESS TO LOCAL SERVICE)           ┃
┃ ⏱️  Time: 5 minutes                                                    ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1️⃣  Download ngrok:
    
    🌐 https://ngrok.com/download
    
    📥 Choose Windows version → Download ZIP

2️⃣  Extract and install:
    
    📂 Extract ngrok.exe to C:\ngrok\ (or any folder)
    
    ➕ Optional: Add to PATH for easy access

3️⃣  Open new PowerShell terminal:
    
    🔷 Press Win+X → Choose "PowerShell" or "Terminal"

4️⃣  Navigate to ngrok folder:
    
    📁 cd C:\ngrok
    
    (Or wherever you extracted ngrok.exe)

5️⃣  Start ngrok tunnel:
    
    🚇 .\ngrok.exe http 8000
    
    (This creates public tunnel to localhost:8000)

6️⃣  Copy the forwarding URL:
    
    You'll see output like:
    
    ┌─────────────────────────────────────────┐
    │ Forwarding                              │
    │ https://abc123-456.ngrok-free.app       │
    │  → http://localhost:8000                │
    └─────────────────────────────────────────┘
    
    📋 Copy the HTTPS URL (e.g., https://abc123-456.ngrok-free.app)
    
    ⚠️  KEEP THIS TERMINAL OPEN! Closing it stops the tunnel.

┌──────────────────────────────────────────────────────────────────────┐
│ Why ngrok is needed:                                                 │
│                                                                      │
│   Agentverse (cloud) → needs to call → Your computer (localhost)    │
│                                                                      │
│   Ngrok creates a public URL that forwards to your local service    │
│   so Agentverse Planner agent can store groups in your database.    │
│                                                                      │
│   Alternative: Deploy agent service to cloud (Render, Railway, etc.)│
└──────────────────────────────────────────────────────────────────────┘


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 3: UPDATE PLANNER AGENT ON AGENTVERSE                            ┃
┃ ⏱️  Time: 5 minutes                                                    ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1️⃣  Open Agentverse:
    
    🌐 https://agentverse.ai
    
    (Login with your account)

2️⃣  Find your Planner agent:
    
    🔍 Look for: "WanderLink_Planner" or "Planner"
    
    📬 Address starts with: agent1qdp7kupk4agz8n...
    
    🖱️  Click on the agent to open it

3️⃣  Open agent.py editor:
    
    📝 Click "Code" tab or "agent.py" file
    
    (Shows Python code editor)

4️⃣  Select all existing code:
    
    ⌨️  Ctrl+A (Select All)
    
    (Entire agent.py content)

5️⃣  Replace with updated code:
    
    📂 Open: D:\WanderLink\agents\src\agents\planner_agent.py
    
    📋 Ctrl+A → Ctrl+C (Copy all)
    
    ↩️  Back to Agentverse → Ctrl+V (Paste)
    
    ✅ Should see new code with urllib.request

6️⃣  Add environment secret:
    
    🔐 Click "Secrets" tab (or "Environment Variables")
    
    ➕ Click "Add Secret" or "+"
    
    📝 Enter:
       Key:   AGENT_SERVICE_URL
       Value: <YOUR NGROK URL FROM STEP 2>
              
       Example: https://abc123-456.ngrok-free.app
    
    💾 Click "Save"

7️⃣  Deploy the agent:
    
    🚀 Click "Save & Deploy" button
    
    ⏳ Wait for deployment (10-15 seconds)

8️⃣  Verify deployment:
    
    📊 Click "Logs" tab
    
    ✅ Look for:
       "✨ Ready to create travel groups!"
       "📬 Agent Address: agent1qdp..."
    
    ❌ If you see "ModuleNotFoundError" → Good! That was the old code.
       New code uses urllib.request (built-in)

┌──────────────────────────────────────────────────────────────────────┐
│ What this does:                                                      │
│   • Replaces old Planner code (that tried to import supabase)        │
│   • New code uses HTTP API to call your agent service                │
│   • Agent service handles Supabase operations                        │
│   • No dependency issues on Agentverse!                              │
└──────────────────────────────────────────────────────────────────────┘


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ 🎉 TESTING TIME! VERIFY COMPLETE FLOW                                 ┃
┃ ⏱️  Time: 5 minutes                                                    ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

Prerequisites Check:
  ✅ Agent service running (http://localhost:8000)
  ✅ Frontend running (http://localhost:3000)
  ✅ Ngrok tunnel active (https://abc123.ngrok-free.app)
  ✅ Planner deployed on Agentverse

Test Scenario: Group Formation with 3 Users
────────────────────────────────────────────

1️⃣  Open 3 browser tabs:
    
    🌐 Tab 1: http://localhost:3000/agent-trips-v2
    🌐 Tab 2: http://localhost:3000/agent-trips-v2  
    🌐 Tab 3: http://localhost:3000/agent-trips-v2
    
    (Use incognito or different browsers for separate users)

2️⃣  Submit trip in Tab 1:
    
    💬 Type: "Varkala adventure trip, 5 days, budget friendly"
    
    🖱️  Click: "SUBMIT & AUTO-MATCH"
    
    ⏳ Expected:
       ✅ Status → "AGENTS ARE WORKING..."
       ✅ "Travel Agent extracted preferences" ✓
       ⏳ "MatchMaker is pooling travelers..." (pulsing)
       🔄 "Checking for group formation every 3 seconds..."

3️⃣  Submit trip in Tab 2:
    
    💬 Type: "Goa beach vacation, 7 days with yoga"
    
    🖱️  Click: "SUBMIT & AUTO-MATCH"
    
    ⏳ Expected:
       ✅ Same status as Tab 1
       🔄 Both tabs polling...

4️⃣  Submit trip in Tab 3:
    
    💬 Type: "Cultural tour of Jaipur, 4 days"
    
    🖱️  Click: "SUBMIT & AUTO-MATCH"
    
    🎊 Expected (ALL 3 TABS should update):
       ┌────────────────────────────────────────┐
       │ 🎉 GROUP MATCHED! 🎉                   │
       │ You've been matched with 2 others!     │
       │ [OPEN GROUP CHAT] button               │
       └────────────────────────────────────────┘

5️⃣  Click "OPEN GROUP CHAT" (any tab):
    
    💬 Expected to see:
       ✅ Group name: "Varkala Adventure Group - Oct 2025"
       ✅ Destination and member count
       ✅ Welcome message from system
       ✅ Full itinerary from Planner agent
       ✅ List of 3 members (with "YOU" badge on yours)

6️⃣  Verify in Supabase Dashboard:
    
    🌐 https://supabase.com/dashboard
    
    🔍 Go to "Table Editor" → Run queries:
    
    SELECT * FROM groups;
    -- Should show 1 group
    
    SELECT * FROM group_members;
    -- Should show 3 members
    
    SELECT * FROM group_messages;
    -- Should show 2+ messages (welcome + itinerary)

┌──────────────────────────────────────────────────────────────────────┐
│ If it works:                                                         │
│   🎉 Congratulations! Your automated system is live!                 │
│                                                                      │
│ If it doesn't work:                                                 │
│   📋 Check TROUBLESHOOTING section below                             │
└──────────────────────────────────────────────────────────────────────┘


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ 🔧 TROUBLESHOOTING COMMON ISSUES                                      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

Issue: "Failed to store trip"
──────────────────────────────
Symptom: Error message when clicking submit
Cause:   Supabase tables don't exist
Fix:     ✅ Complete STEP 1 (run SUPABASE_SCHEMA.sql)


Issue: Polling never finds group
──────────────────────────────
Symptom: Stuck on "AGENTS ARE WORKING..." forever
Cause:   Only 1-2 users submitted (need 3 total)
Fix:     ✅ Open 3 different tabs and submit 3 different trips


Issue: No messages in group chat
──────────────────────────────
Symptom: Group appears but chat is empty
Cause:   Planner agent can't reach agent service
Fix:     
  1. ✅ Verify ngrok is running (STEP 2)
  2. ✅ Check AGENT_SERVICE_URL in Agentverse secrets
  3. ✅ Test ngrok URL in browser: <ngrok_url>/health
  4. ✅ Check agent service terminal for POST /api/store-group


Issue: Agent service not running
──────────────────────────────
Symptom: Can't access http://localhost:8000
Cause:   Service crashed or not started
Fix:     
  PowerShell → cd D:\WanderLink
           → python agents/src/simple_agent_service.py


Issue: Frontend not running
──────────────────────────────
Symptom: Can't access http://localhost:3000
Cause:   Dev server crashed or not started
Fix:     
  PowerShell → cd D:\WanderLink\frontend
           → Remove-Item -Recurse -Force .next
           → npm run dev


Issue: "Supabase client initialization failed"
──────────────────────────────────────────────
Symptom: Error in agent service terminal
Cause:   Invalid Supabase credentials
Fix:     
  ✅ Check agents/.env file
  ✅ Verify SUPABASE_URL and SUPABASE_SERVICE_KEY


Issue: Button still disabled
──────────────────────────────
Symptom: Can't click submit button
Cause:   Using old page (/agent-trips)
Fix:     
  ✅ Use: http://localhost:3000/agent-trips-v2
     Not: http://localhost:3000/agent-trips


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ 📊 SYSTEM STATUS CHECKLIST                                            ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

Use this to verify your setup:

Database:
  ⬜ Supabase tables created (4 tables)
  ⬜ Can query: SELECT * FROM groups; (no error)

Local Services:
  ⬜ Agent service running (http://localhost:8000)
  ⬜ Frontend running (http://localhost:3000)
  ⬜ Ngrok tunnel active (https://...ngrok-free.app)

Agentverse:
  ⬜ Planner agent deployed
  ⬜ AGENT_SERVICE_URL secret added
  ⬜ Logs show "Ready to create travel groups"

Frontend:
  ⬜ Can access http://localhost:3000/agent-trips-v2
  ⬜ Button is clickable
  ⬜ Status updates after submit

End-to-End:
  ⬜ 3 users can submit trips
  ⬜ All tabs show "GROUP MATCHED!"
  ⬜ Group chat displays messages
  ⬜ Database has group records


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ 🚀 SUCCESS! WHAT YOU'VE BUILT                                         ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

Before (Manual Flow):
  1. User submits on frontend
  2. Gets Agentverse link
  3. Manually opens Agentverse
  4. Manually types in chat
  5. Waits for response
  6. Checks Agentverse for itinerary

After (Automated Flow):
  1. User submits on frontend ✨
  2. Automatically sent to agents ✨
  3. Agents process (no user action) ✨
  4. Group stored in database ✨
  5. Frontend auto-detects group ✨
  6. Group chat appears in frontend ✨
  7. User sees everything in one place! ✨

╔══════════════════════════════════════════════════════════════════════╗
║  🎉 You've built a fully automated AI travel group matching system!  ║
║                                                                      ║
║  Users never leave your site. Everything happens automatically!     ║
╚══════════════════════════════════════════════════════════════════════╝


Need more help?
  📖 Read: AUTOMATED_FLOW_SETUP.md (detailed architecture)
  📋 Read: STATUS.md (what's done vs pending)
  🔧 Run:  .\COMPLETE_SETUP.ps1 (automated checks)

Happy travels! 🌍✈️🎒
